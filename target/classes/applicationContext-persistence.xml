<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
       default-lazy-init="true">

    <description>persistence</description>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="com.yonyou.iuap.system.entity,com.yonyou.iuap.example.entity"/>
        <property name="jpaProperties">
            <props>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
                <constructor-arg ref="dataSource"/>
            </bean>
        </property>
    </bean>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.yonyou.iuap" transaction-manager-ref="transactionManager"
                      factory-class="org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean"
                      entity-manager-factory-ref="entityManagerFactory"/>

    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="defaultAutoCommit" value="true"/>

        <!-- Connection Pooling Info -->
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
        <property name="removeAbandoned" value="${jdbc.pool.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}"/>
        
        <!-- 自动重连配置 -->
        <property name="testWhileIdle" value="true"/> 
        <property name="validationQuery" value="select 1"/> 
    </bean>

    <bean id="crossdbDataSource" class="com.yonyou.iuap.persistence.bs.framework.ds.CrossdbDataSource"
          lazy-init="false">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="crossdbJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="crossdbDataSource"></property>
    </bean>

    <bean id="baseDAO" class="com.yonyou.iuap.persistence.bs.dao.BaseDAO">
        <property name="jdbcTemplate" ref="crossdbJdbcTemplate"/>
        <property name="dbMetaHelper" ref="dbMetaInfo"/>
    </bean>

    <bean id="dbMetaInfo" class="com.yonyou.iuap.persistence.bs.util.DBMetaHelper">
        <property name="jdbcTemplate" ref="crossdbJdbcTemplate"/>
        <!-- 可以指定默认数据库类型 -->
        <!--<property name="dbType" value="#{T(uap.web.persist.jdbc.framework.util.DBConsts).POSTGRESQL}"/>-->
    </bean>

    <!-- 数据源配置,使用应用服务器的数据库连接池 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage"
                  value="com.yonyou.iuap.example.entity,com.yonyou.metadata.spi,com.yonyou.metadata.mybatis.util.publish.model"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations">
        	<!--切换数据库类型后，需要修改此处的配置文件，使用对应的数据库类型下的mapper文件-->
            <array>
                <value>classpath*:/mybatis/pg/*.xml</value>
                <!-- <value>classpath*:/mybatis/mysql/*.xml</value> -->
                <!-- <value>classpath*:/mybatis/oracle/*.xml</value> -->
                <value>classpath*:/mybatis/MetadataServiceDao/*.xml</value>
            </array>
        </property>
        <!-- 如果想用iuap的分页插件，可以放开下面注释， oracle或mysql，postgresql数据库则使用下面配置， -->
        <property name="plugins">
            <array>
                <bean id="paginationInterceptor"
                      class="com.yonyou.iuap.mybatis.plugins.PaginationInterceptor">
                    <property name="properties">
                        <props>
                        	<!--修改数据库类型后，dbms的属性需要修改，如oracle、postgresql、mysql-->
                            <prop key="dbms">postgresql</prop>
                            <prop key="sqlRegex">.*selectAllByPage</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yonyou.iuap.example.repository,com.yonyou.metadata.mybatis.dao"/>
        <property name="annotationClass" value="com.yonyou.iuap.persistence.mybatis.anotation.MyBatisRepository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <bean class="com.yonyou.iuap.mvc.exceptionhandle.service.impl.DBSysPromptService">
        <property name="jt" ref="jdbcTemplate"/>
    </bean>


</beans>
